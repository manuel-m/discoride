
#ifndef __RPROXY_H__
#define __RPROXY_H__

/*========================================================================
 * include
 *
 *
 *========================================================================*/
#include "rstack_proxy_include.h"


typedef struct _rbtin {

  rattrib_declare(  rlswid, wids )
  rattrib_declare(  rlswid, cwids )
  rattrib_declare(  rlsstyle, styles )
  rattrib_declare(  rkeys, keys )
  rattrib_declare(  int, mouse_wheel )
  rattrib_declare(  int, design_height )
  rattrib_declare(  int, design_width )
  rattrib_declare(  int, video_flags )
  rattrib_declare(  int, saved_window_width )
  rattrib_declare(  int, saved_window_height )
  rattrib_declare(  rplaylist, playlist )
  rattrib_declare(  rtrack *, playlist_selected_track )
  rattrib_declare(  raudio, ad )
  rattrib_declare(  double, gain_factor )
  rattrib_declare(  double, depitch_factor )
  rattrib_declare(  int, alloc_disable )
  rattrib_declare(  rlschar255, args )
  rattrib_declare(  rlsfunc, ml_functions )
  rattrib_declare(  size_t, dock0_track_index )
  rattrib_declare(  size_t, dock1_track_index )
  rattrib_declare(  int, dock0_loaded )
  rattrib_declare(  int, dock1_loaded )
  rattrib_declare(  rwid *, rwid_over )
  rattrib_declare(  int, playlist_focus )
  rattrib_declare(  raudio_meter, peak_meter_main )
  rattrib_declare(  raudio_meter, peak_meter_0 )
  rattrib_declare(  raudio_meter, peak_meter_1 )
  rattrib_declare(  int, mouse_x )
  rattrib_declare(  int, mouse_y )
  rattrib_declare(  ruser_evtQ, user_evtQ )
  rattrib_declare(  int, check_resize )
  rattrib_declare(  int, resize_flag )
  rattrib_declare(  rchans, chans )
  rattrib_declare(  rcpu, cpu )
  rattrib_declare(  rlspoll_cb, poll_cbs )
  rattrib_declare(  rRGB, window_bg_color )
  rattrib_declare(  int, chan0_straffing )
  rattrib_declare(  int, chan1_straffing )
  rattrib_declare(  int, chan0_straffway )
  rattrib_declare(  int, chan1_straffway )
  rdh_declare(  rdh_double, ratio )
  rdh_declare(  rdh_int, quit )
  rdh_declare(  rdh_int, desktop_height )
  rdh_declare(  rdh_int, desktop_width )
  rdh_declare(  rdh_double, ratio_height )
  rdh_declare(  rdh_double, ratio_width )
  rdh_declare(  rdh_int, window_height )
  rdh_declare(  rdh_int, window_width )
  rdh_declare(  rdh_int, window_mode )
  rdh_declare(  rdh_char255, window_caption )
  rdh_declare(  rdh_double, global_font_coef )
  rdh_declare(  rdh_int, button_activated_flag )
  rdh_declare(  rdh_int, button_enabled_flag )
  rdh_declare(  rdh_char255, button_label )
  rdh_declare(  rdh_int, display_state )
  rdh_declare(  rdh_int, playlist0_state )
  rdh_declare(  rdh_char255, playlist0_label )
  rdh_declare(  rdh_int, playlist1_state )
  rdh_declare(  rdh_char255, playlist1_label )
  rdh_declare(  rdh_int, playlist2_state )
  rdh_declare(  rdh_char255, playlist2_label )
  rdh_declare(  rdh_int, playlist3_state )
  rdh_declare(  rdh_char255, playlist3_label )
  rdh_declare(  rdh_int, playlist4_state )
  rdh_declare(  rdh_char255, playlist4_label )
  rdh_declare(  rdh_int, playlist5_state )
  rdh_declare(  rdh_char255, playlist5_label )
  rdh_declare(  rdh_int, playlist6_state )
  rdh_declare(  rdh_char255, playlist6_label )
  rdh_declare(  rdh_int, playlist7_state )
  rdh_declare(  rdh_char255, playlist7_label )
  rdh_declare(  rdh_int, playlist_state )
  rdh_declare(  rdh_size, playlist_pos )
  rdh_declare(  rdh_size, playlist_pos_step )
  rdh_declare(  rdh_size, activated_playlist_wid_i )
  rdh_declare(  rdh_char255,  playlist0_duration_label )
  rdh_declare(  rdh_char255, playlist1_duration_label )
  rdh_declare(  rdh_char255, playlist2_duration_label )
  rdh_declare(  rdh_char255, playlist3_duration_label )
  rdh_declare(  rdh_char255, playlist4_duration_label )
  rdh_declare(  rdh_char255, playlist5_duration_label )
  rdh_declare(  rdh_char255, playlist6_duration_label )
  rdh_declare(  rdh_char255, playlist7_duration_label )
  rdh_declare(  rdh_int, audio_state )
  rdh_declare(  rdh_double, xfader )
  rdh_declare(  rdh_double, xfader_step )
  rdh_declare(  rdh_double, chan0_vol )
  rdh_declare(  rdh_double, chan1_vol )
  rdh_declare(  rdh_double, chan0_gain )
  rdh_declare(  rdh_double, chan1_gain )
  rdh_declare(  rdh_double, chan0_depitch )
  rdh_declare(  rdh_double, chan1_depitch )
  rdh_declare(  rdh_int, chan0_state )
  rdh_declare(  rdh_int, chan1_state )
  rdh_declare(  rdh_char255, chan0_cue_label )
  rdh_declare(  rdh_char255, chan1_cue_label )
  rdh_declare(  rdh_char255, chan0_track_title )
  rdh_declare(  rdh_char255, chan1_track_title )
  rdh_declare(  rdh_int, chan0_cue_state )
  rdh_declare(  rdh_int, chan1_cue_state )
  rdh_declare(  rdh_double, chan0_pos_norm )
  rdh_declare(  rdh_double, chan1_pos_norm )
  rdh_declare(  rdh_int, chan0_can_load )
  rdh_declare(  rdh_int, chan1_can_load )
  rdh_declare(  rdh_char255, chan0_play_label )
  rdh_declare(  rdh_char255, chan1_play_label )
  rdh_declare(  rdh_double, main_vumeter_left )
  rdh_declare(  rdh_double, main_vumeter_right )
  rdh_declare(  rdh_double, chan0_vumeter_left )
  rdh_declare(  rdh_double, chan0_vumeter_right )
  rdh_declare(  rdh_double, chan1_vumeter_left )
  rdh_declare(  rdh_double, chan1_vumeter_right )
  rdh_declare(  rdh_char255, deckA_label )
  rdh_declare(  rdh_char255, deckB_label )
  rdh_declare(  rdh_double, chan0_punch )
  rdh_declare(  rdh_double, chan1_punch )
  rdh_declare(  rdh_double, cpu_user )
  rmutex_stack_decl( mp3_decode_mutex )
  rmutex_stack_decl( user_evts_mutex )
  rthread_stack_declare( raudio_chan0_decode_callback_TS )
  rthread_stack_declare( raudio_chan1_decode_callback_TS )
  rthread_stack_declare( rplaylist_tag_decode_callback_TS )
  rtimer_stack_declare(  lag_resize )
  rtimer_stack_declare(  current )



} rbtin;

rbtin btin;

void rproxy_init(void);
void rproxy_destroy(void);

#endif /* __RPROXY_H__ */


